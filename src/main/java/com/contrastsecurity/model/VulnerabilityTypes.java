package com.contrastsecurity.model;

import com.contrastsecurity.data.TeamServerProfile;
import com.contrastsecurity.exceptions.UnauthorizedException;
import com.contrastsecurity.models.Rules;
import com.contrastsecurity.sdk.ContrastSDK;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Logger;
import java.util.logging.Level;

public class VulnerabilityTypes {

    public static final String[] SEVERITIES = {"Any", "Note", "Low", "Medium", "High", "Critical"};

    public static final String[] getTypes(TeamServerProfile profile){

        ContrastSDK sdk = new ContrastSDK(profile.getUsername(), profile.getServicekey(), profile.getApikey(),
                profile.getUrl());

        try {
            List<Rules.Rule> orgRules = sdk.getRules(profile.getUuid()).getRules();

            String[] rules = new String[orgRules.size()];
            for(int i = 0; i <orgRules.size(); i++){
                rules[i] = orgRules.get(i).getName();
            }
            return rules;
        } catch (IOException e) {
            Logger.getAnonymousLogger().log(Level.SEVERE, "Failed to load organization rules for" + profile.getUuid());
            e.printStackTrace();
        } catch (UnauthorizedException e) {
            Logger.getAnonymousLogger().log(Level.SEVERE, profile.getProfileName() + " unauthorized to access rules " +
                    "for " + profile.getUuid());
            e.printStackTrace();

        }
        return new String[0];
    }

}
